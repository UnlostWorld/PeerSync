name: Build PeerSync

permissions:
  contents: write

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x

    - name: Download Dalamud
      run: |
        Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
        Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"

    - name: Restore Dependencies
      run: dotnet restore PeerSync.sln

    - name: Build PeerSync
      run: dotnet build PeerSync.sln --no-restore /p:Configuration=Release /p:Version=${{ github.run_number }}

    - name: Zip Release
      uses: TheDoctor0/zip-release@0.6.0
      with:
        filename: '../../../../PeerSync.zip'
        directory: './PeerSync/bin/x64/Release/'

    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "./PeerSync.zip"
        name: PeerSync v${{ github.run_number }}
        tag: v${{ github.run_number }}
        draft: false
        token: ${{ secrets.GITHUB_TOKEN }}
        commit: ${{ vars.GITHUB_SHA }}

    - name: Update repo.json
      run: |
        git config --global user.name "Actions User"
        git config --global user.email "actions@github.com"
        git fetch origin main && git checkout main
        $ver = '${{ github.run_number }}'
        $path = './Resources/Templates/repo.tmpl'
        $new_path = './repo.json'
        $content = get-content -path $path
        $content = $content -replace '{version}',$ver
        set-content -Path $new_path -Value $content
        git add repo.json
        git commit -m "[CI] Updating versions for v${{ github.run_number }}" || true
        git push origin main || true